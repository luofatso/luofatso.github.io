import{_ as a,o as s,c as n,a2 as e}from"./chunks/framework.DkMK-_fX.js";const m=JSON.parse('{"title":"记录一些ES6的使用小技巧","description":"","frontmatter":{},"headers":[],"relativePath":"大前端/JavaScript/ES6小技巧.md","filePath":"大前端/JavaScript/ES6小技巧.md","lastUpdated":1728700067000}'),p={name:"大前端/JavaScript/ES6小技巧.md"},l=e(`<h1 id="记录一些es6的使用小技巧" tabindex="-1">记录一些ES6的使用小技巧 <a class="header-anchor" href="#记录一些es6的使用小技巧" aria-label="Permalink to &quot;记录一些ES6的使用小技巧&quot;">​</a></h1><h3 id="_1-访问数组最后一个元素" tabindex="-1">1.访问数组最后一个元素 <a class="header-anchor" href="#_1-访问数组最后一个元素" aria-label="Permalink to &quot;1.访问数组最后一个元素&quot;">​</a></h3><p>ES2022 专门提供了一个 Array.prototype.at 方法，用于根据给定索引获取数组元素：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[1, 2, 3, 4, 5].at(-1); // 5</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-结构赋值" tabindex="-1">2.结构赋值 <a class="header-anchor" href="#_2-结构赋值" aria-label="Permalink to &quot;2.结构赋值&quot;">​</a></h3><ul><li>别名</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const obj = {</span></span>
<span class="line"><span>  // 这个键名太长了，我们希望把它换掉</span></span>
<span class="line"><span>  aaa_bbb_ccc: {</span></span>
<span class="line"><span>    name: &quot;dby&quot;,</span></span>
<span class="line"><span>    age: 12,</span></span>
<span class="line"><span>    sex: true</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>const { aaa_bbb_ccc: user } = obj;</span></span>
<span class="line"><span>console.log(user); // { name: &quot;dby&quot;, age: 12, sex: true }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>默认值</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>fetchUserInfo()</span></span>
<span class="line"><span>  .then(({ aaa_bbb_ccc: user = {} }) =&gt; {</span></span>
<span class="line"><span>    // ...</span></span>
<span class="line"><span>  })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>深度解构</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let obj = {</span></span>
<span class="line"><span>  name: &quot;dby&quot;,</span></span>
<span class="line"><span>  a: {</span></span>
<span class="line"><span>    b: 1</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>const { a: { b } } = obj;</span></span>
<span class="line"><span>console.log(b); // 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>短路符防止报错</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const {a,b,c,d,e} = obj || {};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-检查属性是否存在对象中" tabindex="-1">3.检查属性是否存在对象中 <a class="header-anchor" href="#_3-检查属性是否存在对象中" aria-label="Permalink to &quot;3.检查属性是否存在对象中&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Object.hasOwn(person, &quot;salary&quot;)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>注意是提案，浏览器兼容性 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn" target="_blank" rel="noreferrer">提案地址</a></p></blockquote>`,16),i=[l];function t(r,c,b,o,d,u){return s(),n("div",null,i)}const v=a(p,[["render",t]]);export{m as __pageData,v as default};
