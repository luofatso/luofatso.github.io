import{_ as a,o as e,c as t,a2 as r}from"./chunks/framework.DkMK-_fX.js";const u=JSON.parse('{"title":"前端自检系列 --- 计算机基础","description":"","frontmatter":{"outline":[2,3]},"headers":[],"relativePath":"关于工作/前端自检/计算机基础.md","filePath":"关于工作/前端自检/计算机基础.md","lastUpdated":1681959689000}'),h={name:"关于工作/前端自检/计算机基础.md"},i=r('<h1 id="前端自检系列-计算机基础" tabindex="-1">前端自检系列 --- 计算机基础 <a class="header-anchor" href="#前端自检系列-计算机基础" aria-label="Permalink to &quot;前端自检系列 --- 计算机基础&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#_1-编译原理">1 编译原理</a><ul><li><a href="#_1-1-理解代码到底是什么-计算机如何将代码转换为可以运行的目标程序">1.1 理解代码到底是什么，计算机如何将代码转换为可以运行的目标程序</a></li><li><a href="#_1-2-正则表达式的匹配原理和性能优化">1.2 正则表达式的匹配原理和性能优化</a></li><li><a href="#_1-3-如何将javascript代码解析成抽象语法树-ast">1.3 如何将JavaScript代码解析成抽象语法树(AST)</a></li><li><a href="#_1-4-base64的编码原理">1.4 base64的编码原理</a></li><li><a href="#_1-5-几种进制的相互转换计算方法-在javascript中如何表示和转换">1.5 几种进制的相互转换计算方法，在JavaScript中如何表示和转换</a></li></ul></li><li><a href="#_2-网络协议">2 网络协议</a><ul><li><a href="#_2-1-理解什么是协议-了解tcp-ip网络协议族的构成-每层协议在应用程序中发挥的作用">2.1 理解什么是协议，了解TCP/IP网络协议族的构成，每层协议在应用程序中发挥的作用</a></li><li><a href="#_2-2-三次握手和四次挥手详细原理-为什么要使用这种机制">2.2 三次握手和四次挥手详细原理，为什么要使用这种机制</a></li><li><a href="#_2-3-有哪些协议是可靠-tcp有哪些手段保证可靠交付">2.3 有哪些协议是可靠，TCP有哪些手段保证可靠交付</a></li><li><a href="#_2-4-dns的作用、dns解析的详细过程-dns优化原理">2.4 DNS的作用、DNS解析的详细过程，DNS优化原理</a></li><li><a href="#_2-5-cdn的作用和原理">2.5 CDN的作用和原理</a></li><li><a href="#_2-6-http请求报文和响应报文的具体组成-能理解常见请求头的含义-有几种请求方式-区别是什么">2.6 HTTP请求报文和响应报文的具体组成，能理解常见请求头的含义，有几种请求方式，区别是什么</a></li><li><a href="#_2-7-http所有状态码的具体含义-看到异常状态码能快速定位问题">2.7 HTTP所有状态码的具体含义，看到异常状态码能快速定位问题</a></li><li><a href="#_2-8-http1-1、http2-0带来的改变">2.8 HTTP1.1、HTTP2.0带来的改变</a></li><li><a href="#_2-9-https的加密原理-如何开启https-如何劫持https请求">2.9 HTTPS的加密原理，如何开启HTTPS，如何劫持HTTPS请求</a></li><li><a href="#_2-10-理解websocket协议的底层原理、与http的区别">2.10 理解WebSocket协议的底层原理、与HTTP的区别</a></li></ul></li><li><a href="#_3-设计模式">3 设计模式</a><ul><li><a href="#_3-1-熟练使用前端常用的设计模式编写代码-如单例模式、装饰器模式、代理模式等">3.1 熟练使用前端常用的设计模式编写代码，如单例模式、装饰器模式、代理模式等</a></li><li><a href="#_3-2-发布订阅模式和观察者模式的异同以及实际应用">3.2 发布订阅模式和观察者模式的异同以及实际应用</a></li><li><a href="#_3-3-可以说出几种设计模式在开发中的实际应用-理解框架源码中对设计模式的应用">3.3 可以说出几种设计模式在开发中的实际应用，理解框架源码中对设计模式的应用</a></li></ul></li></ul></nav><h2 id="_1-编译原理" tabindex="-1">1 编译原理 <a class="header-anchor" href="#_1-编译原理" aria-label="Permalink to &quot;1 编译原理&quot;">​</a></h2><h3 id="_1-1-理解代码到底是什么-计算机如何将代码转换为可以运行的目标程序" tabindex="-1">1.1 理解代码到底是什么，计算机如何将代码转换为可以运行的目标程序 <a class="header-anchor" href="#_1-1-理解代码到底是什么-计算机如何将代码转换为可以运行的目标程序" aria-label="Permalink to &quot;1.1 理解代码到底是什么，计算机如何将代码转换为可以运行的目标程序&quot;">​</a></h3><h3 id="_1-2-正则表达式的匹配原理和性能优化" tabindex="-1">1.2 正则表达式的匹配原理和性能优化 <a class="header-anchor" href="#_1-2-正则表达式的匹配原理和性能优化" aria-label="Permalink to &quot;1.2 正则表达式的匹配原理和性能优化&quot;">​</a></h3><h3 id="_1-3-如何将javascript代码解析成抽象语法树-ast" tabindex="-1">1.3 如何将JavaScript代码解析成抽象语法树(AST) <a class="header-anchor" href="#_1-3-如何将javascript代码解析成抽象语法树-ast" aria-label="Permalink to &quot;1.3 如何将JavaScript代码解析成抽象语法树(AST)&quot;">​</a></h3><h3 id="_1-4-base64的编码原理" tabindex="-1">1.4 base64的编码原理 <a class="header-anchor" href="#_1-4-base64的编码原理" aria-label="Permalink to &quot;1.4 base64的编码原理&quot;">​</a></h3><h3 id="_1-5-几种进制的相互转换计算方法-在javascript中如何表示和转换" tabindex="-1">1.5 几种进制的相互转换计算方法，在JavaScript中如何表示和转换 <a class="header-anchor" href="#_1-5-几种进制的相互转换计算方法-在javascript中如何表示和转换" aria-label="Permalink to &quot;1.5 几种进制的相互转换计算方法，在JavaScript中如何表示和转换&quot;">​</a></h3><h2 id="_2-网络协议" tabindex="-1">2 网络协议 <a class="header-anchor" href="#_2-网络协议" aria-label="Permalink to &quot;2 网络协议&quot;">​</a></h2><h3 id="_2-1-理解什么是协议-了解tcp-ip网络协议族的构成-每层协议在应用程序中发挥的作用" tabindex="-1">2.1 理解什么是协议，了解TCP/IP网络协议族的构成，每层协议在应用程序中发挥的作用 <a class="header-anchor" href="#_2-1-理解什么是协议-了解tcp-ip网络协议族的构成-每层协议在应用程序中发挥的作用" aria-label="Permalink to &quot;2.1 理解什么是协议，了解TCP/IP网络协议族的构成，每层协议在应用程序中发挥的作用&quot;">​</a></h3><h3 id="_2-2-三次握手和四次挥手详细原理-为什么要使用这种机制" tabindex="-1">2.2 三次握手和四次挥手详细原理，为什么要使用这种机制 <a class="header-anchor" href="#_2-2-三次握手和四次挥手详细原理-为什么要使用这种机制" aria-label="Permalink to &quot;2.2 三次握手和四次挥手详细原理，为什么要使用这种机制&quot;">​</a></h3><h3 id="_2-3-有哪些协议是可靠-tcp有哪些手段保证可靠交付" tabindex="-1">2.3 有哪些协议是可靠，TCP有哪些手段保证可靠交付 <a class="header-anchor" href="#_2-3-有哪些协议是可靠-tcp有哪些手段保证可靠交付" aria-label="Permalink to &quot;2.3 有哪些协议是可靠，TCP有哪些手段保证可靠交付&quot;">​</a></h3><h3 id="_2-4-dns的作用、dns解析的详细过程-dns优化原理" tabindex="-1">2.4 DNS的作用、DNS解析的详细过程，DNS优化原理 <a class="header-anchor" href="#_2-4-dns的作用、dns解析的详细过程-dns优化原理" aria-label="Permalink to &quot;2.4 DNS的作用、DNS解析的详细过程，DNS优化原理&quot;">​</a></h3><h3 id="_2-5-cdn的作用和原理" tabindex="-1">2.5 CDN的作用和原理 <a class="header-anchor" href="#_2-5-cdn的作用和原理" aria-label="Permalink to &quot;2.5 CDN的作用和原理&quot;">​</a></h3><h3 id="_2-6-http请求报文和响应报文的具体组成-能理解常见请求头的含义-有几种请求方式-区别是什么" tabindex="-1">2.6 HTTP请求报文和响应报文的具体组成，能理解常见请求头的含义，有几种请求方式，区别是什么 <a class="header-anchor" href="#_2-6-http请求报文和响应报文的具体组成-能理解常见请求头的含义-有几种请求方式-区别是什么" aria-label="Permalink to &quot;2.6 HTTP请求报文和响应报文的具体组成，能理解常见请求头的含义，有几种请求方式，区别是什么&quot;">​</a></h3><h3 id="_2-7-http所有状态码的具体含义-看到异常状态码能快速定位问题" tabindex="-1">2.7 HTTP所有状态码的具体含义，看到异常状态码能快速定位问题 <a class="header-anchor" href="#_2-7-http所有状态码的具体含义-看到异常状态码能快速定位问题" aria-label="Permalink to &quot;2.7 HTTP所有状态码的具体含义，看到异常状态码能快速定位问题&quot;">​</a></h3><h3 id="_2-8-http1-1、http2-0带来的改变" tabindex="-1">2.8 HTTP1.1、HTTP2.0带来的改变 <a class="header-anchor" href="#_2-8-http1-1、http2-0带来的改变" aria-label="Permalink to &quot;2.8 HTTP1.1、HTTP2.0带来的改变&quot;">​</a></h3><h3 id="_2-9-https的加密原理-如何开启https-如何劫持https请求" tabindex="-1">2.9 HTTPS的加密原理，如何开启HTTPS，如何劫持HTTPS请求 <a class="header-anchor" href="#_2-9-https的加密原理-如何开启https-如何劫持https请求" aria-label="Permalink to &quot;2.9 HTTPS的加密原理，如何开启HTTPS，如何劫持HTTPS请求&quot;">​</a></h3><h3 id="_2-10-理解websocket协议的底层原理、与http的区别" tabindex="-1">2.10 理解WebSocket协议的底层原理、与HTTP的区别 <a class="header-anchor" href="#_2-10-理解websocket协议的底层原理、与http的区别" aria-label="Permalink to &quot;2.10 理解WebSocket协议的底层原理、与HTTP的区别&quot;">​</a></h3><h2 id="_3-设计模式" tabindex="-1">3 设计模式 <a class="header-anchor" href="#_3-设计模式" aria-label="Permalink to &quot;3 设计模式&quot;">​</a></h2><h3 id="_3-1-熟练使用前端常用的设计模式编写代码-如单例模式、装饰器模式、代理模式等" tabindex="-1">3.1 熟练使用前端常用的设计模式编写代码，如单例模式、装饰器模式、代理模式等 <a class="header-anchor" href="#_3-1-熟练使用前端常用的设计模式编写代码-如单例模式、装饰器模式、代理模式等" aria-label="Permalink to &quot;3.1 熟练使用前端常用的设计模式编写代码，如单例模式、装饰器模式、代理模式等&quot;">​</a></h3><h3 id="_3-2-发布订阅模式和观察者模式的异同以及实际应用" tabindex="-1">3.2 发布订阅模式和观察者模式的异同以及实际应用 <a class="header-anchor" href="#_3-2-发布订阅模式和观察者模式的异同以及实际应用" aria-label="Permalink to &quot;3.2 发布订阅模式和观察者模式的异同以及实际应用&quot;">​</a></h3><h3 id="_3-3-可以说出几种设计模式在开发中的实际应用-理解框架源码中对设计模式的应用" tabindex="-1">3.3 可以说出几种设计模式在开发中的实际应用，理解框架源码中对设计模式的应用 <a class="header-anchor" href="#_3-3-可以说出几种设计模式在开发中的实际应用-理解框架源码中对设计模式的应用" aria-label="Permalink to &quot;3.3 可以说出几种设计模式在开发中的实际应用，理解框架源码中对设计模式的应用&quot;">​</a></h3>',23),l=[i];function o(s,n,_,d,c,T){return e(),t("div",null,l)}const b=a(h,[["render",o]]);export{u as __pageData,b as default};
