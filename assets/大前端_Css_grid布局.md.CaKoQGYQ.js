import{_ as s}from"./chunks/grid-auto-flow.CoVTGoFl.js";import{_ as a,o as n,c as e,a2 as p}from"./chunks/framework.DkMK-_fX.js";const l="/assets/grid-auto-flow1.Cfahf-mR.png",i="/assets/grid-auto-flow2.DVJuSHF0.png",t="/assets/grid-auto-rows.C4wyTDlw.png",_=JSON.parse('{"title":"Grid布局示例","description":"","frontmatter":{},"headers":[],"relativePath":"大前端/Css/grid布局.md","filePath":"大前端/Css/grid布局.md","lastUpdated":1727401527000}'),r={name:"大前端/Css/grid布局.md"},c=p(`<h1 id="grid布局示例" tabindex="-1">Grid布局示例 <a class="header-anchor" href="#grid布局示例" aria-label="Permalink to &quot;Grid布局示例&quot;">​</a></h1><p>采用网格布局的区域，称为&quot;容器&quot;（container）。容器内部采用网格定位的子元素，称为&quot;项目&quot;（item）。</p><h2 id="_1-容器" tabindex="-1">1. 容器 <a class="header-anchor" href="#_1-容器" aria-label="Permalink to &quot;1. 容器&quot;">​</a></h2><h3 id="_1-1-display属性" tabindex="-1">1.1 display属性 <a class="header-anchor" href="#_1-1-display属性" aria-label="Permalink to &quot;1.1 display属性&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>display: grid;</span></span>
<span class="line"><span>display: inline-grid;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-2-grid-template-columns-属性-grid-template-rows-属性" tabindex="-1">1.2 grid-template-columns 属性，grid-template-rows 属性 <a class="header-anchor" href="#_1-2-grid-template-columns-属性-grid-template-rows-属性" aria-label="Permalink to &quot;1.2 grid-template-columns 属性，grid-template-rows 属性&quot;">​</a></h3><p>容器指定了网格布局以后，接着就要划分行和列。<code>grid-template-columns</code>属性定义每一列的列宽，<code>grid-template-rows</code>属性定义每一行的行高。</p><blockquote><p>repeat(num:重复数量, number:重复数值) num为关键字<code>auto-fill</code>关键字时，为<code>number</code>值尽可能多表示。</p></blockquote><blockquote><p>fr关键字；剩下的倍数划分的意思，类似flex：1；</p></blockquote><blockquote><p>minmax(min, max),接受两个参数，分别为最小值和最大值。取值在两者之间。</p></blockquote><blockquote><p>auto关键字；浏览器自动分配。</p></blockquote><blockquote><p>网格线的名称 <code> grid-template-columns: [c1] 100px [c2] 100px [c3] auto [c4]; grid-template-rows: [r1] 100px [r2] 100px [r3] auto [r4];</code>; 允许同一根线有多个名字，比如 <code>[fifth-line row-5]</code>。</p></blockquote><h3 id="_1-3-row-gap-columns-gap-gap属性" tabindex="-1">1.3 row-gap, columns-gap, gap属性 <a class="header-anchor" href="#_1-3-row-gap-columns-gap-gap属性" aria-label="Permalink to &quot;1.3 row-gap, columns-gap, gap属性&quot;">​</a></h3><p>分别为行间距，列间距，合并写法: <code>gap: row columns</code>; 省略只有一个值的时候为两个值一样。</p><h3 id="_1-4-grid-template-areas-属性" tabindex="-1">1.4 grid-template-areas 属性 <a class="header-anchor" href="#_1-4-grid-template-areas-属性" aria-label="Permalink to &quot;1.4 grid-template-areas 属性&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>grid-template-areas: &quot;header header header&quot;</span></span>
<span class="line"><span>                     &quot;main main sidebar&quot;</span></span>
<span class="line"><span>                     &quot;footer footer footer&quot;;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_1-5-grid-auto-flow-属性" tabindex="-1">1.5 grid-auto-flow 属性 <a class="header-anchor" href="#_1-5-grid-auto-flow-属性" aria-label="Permalink to &quot;1.5 grid-auto-flow 属性&quot;">​</a></h3><p><img src="`+s+'" alt="默认grid"> 默认排版是先行后列（上图），可以采用先列后行（下图），类似flex的columns, <code>grid-auto-flow: column;</code>; <img src="'+l+'" alt="按列排版"> 但是有时候列或者行的大小会很大，这样就会占用留下空白（上图），所以我们可以使用 <code>grid-auto-flow: column dense</code>;这样就会填充空白（下图），行出现留白一样的处理方式<code>grid-auto-flow: row dense</code>。 <img src="'+i+`" alt="处理留白，紧密排版"></p><h3 id="_1-6-justify-items-align-items-place-items-属性" tabindex="-1">1.6 justify-items，align-items, place-items 属性 <a class="header-anchor" href="#_1-6-justify-items-align-items-place-items-属性" aria-label="Permalink to &quot;1.6 justify-items，align-items, place-items 属性&quot;">​</a></h3><p>justify-items属性设置单元格内容的水平位置（左中右），align-items属性设置单元格内容的垂直位置（上中下）。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>justify-items: start | end | center | stretch(拉伸，占满单元格的整个宽度（默认值）。);</span></span>
<span class="line"><span>align-items: start | end | center | stretch;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-7-justify-content-align-content-place-content-属性" tabindex="-1">1.7 justify-content，align-content，place-content 属性 <a class="header-anchor" href="#_1-7-justify-content-align-content-place-content-属性" aria-label="Permalink to &quot;1.7 justify-content，align-content，place-content 属性&quot;">​</a></h3><p>justify-content属性是整个内容区域在容器里面的水平位置（左中右），align-content属性是整个内容区域的垂直位置（上中下）。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>justify-content:</span></span>
<span class="line"><span>            start |</span></span>
<span class="line"><span>            end |</span></span>
<span class="line"><span>            center |</span></span>
<span class="line"><span>            stretch |</span></span>
<span class="line"><span>            space-around(每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍。) |</span></span>
<span class="line"><span>            space-between(space-between - 项目与项目的间隔相等，项目与容器边框之间没有间隔。) |</span></span>
<span class="line"><span>            space-evenly(space-evenly - 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔。);</span></span>
<span class="line"><span>align-content: start | end | center | stretch | space-around | space-between | space-evenly;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_1-8-grid-auto-columns-grid-auto-rows-属性" tabindex="-1">1.8 grid-auto-columns, grid-auto-rows 属性 <a class="header-anchor" href="#_1-8-grid-auto-columns-grid-auto-rows-属性" aria-label="Permalink to &quot;1.8 grid-auto-columns, grid-auto-rows 属性&quot;">​</a></h3><p>有时候，一些项目的指定位置，在现有网格的外部。比如网格只有3列，但是某一个项目指定在第5行。这时，浏览器会自动生成多余的网格，以便放置项目。</p><p><img src="`+t+`" alt="grid-auto-rows"></p><h3 id="_1-9-grid-template-grid-属性" tabindex="-1">1.9 grid-template, grid 属性 <a class="header-anchor" href="#_1-9-grid-template-grid-属性" aria-label="Permalink to &quot;1.9 grid-template, grid 属性&quot;">​</a></h3><p>grid-template属性是grid-template-columns、grid-template-rows和grid-template-areas这三个属性的合并简写形式。</p><p>grid属性是grid-template-rows、grid-template-columns、grid-template-areas、 grid-auto-rows、grid-auto-columns、grid-auto-flow这六个属性的合并简写形式。</p><p>从易读易写的角度考虑，还是建议不要合并属性。</p><h2 id="_2-项目" tabindex="-1">2. 项目 <a class="header-anchor" href="#_2-项目" aria-label="Permalink to &quot;2. 项目&quot;">​</a></h2><h3 id="_2-1-grid-column-start-grid-column-end-grid-row-start-grid-row-end-grid-column-grid-row-grid-area" tabindex="-1">2.1 grid-column-start, grid-column-end, grid-row-start, grid-row-end === grid-column, grid-row === grid-area <a class="header-anchor" href="#_2-1-grid-column-start-grid-column-end-grid-row-start-grid-row-end-grid-column-grid-row-grid-area" aria-label="Permalink to &quot;2.1 grid-column-start, grid-column-end, grid-row-start, grid-row-end === grid-column, grid-row === grid-area&quot;">​</a></h3><p>后面相等的为简写。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>grid-column-start属性：左边框所在的垂直网格线</span></span>
<span class="line"><span>grid-column-end属性：右边框所在的垂直网格线</span></span>
<span class="line"><span>grid-row-start属性：上边框所在的水平网格线</span></span>
<span class="line"><span>grid-row-end属性：下边框所在的水平网格线</span></span>
<span class="line"><span>grid-column: &lt;start-line&gt; / &lt;end-line&gt;;</span></span>
<span class="line"><span>grid-row: &lt;start-line&gt; / &lt;end-line&gt;;</span></span>
<span class="line"><span>grid-area: &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>注意<code>grid-area</code>还可以为指定区域，例如指定为 grid-template-areas 属性上面设置的 <code>sidebar</code></p></blockquote><h3 id="_2-2-justify-self-align-self-place-self-属性" tabindex="-1">2.2 justify-self, align-self, place-self 属性 <a class="header-anchor" href="#_2-2-justify-self-align-self-place-self-属性" aria-label="Permalink to &quot;2.2 justify-self, align-self, place-self 属性&quot;">​</a></h3><p>justify-self属性设置单元格内容的水平位置（左中右），跟justify-items属性的用法完全一致，但只作用于单个项目。</p><p>align-self属性设置单元格内容的垂直位置（上中下），跟align-items属性的用法完全一致，也是只作用于单个项目。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>justify-self: start | end | center | stretch;</span></span>
<span class="line"><span>align-self: start | end | center | stretch;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>start：对齐单元格的起始边缘。</span></span>
<span class="line"><span>end：对齐单元格的结束边缘。</span></span>
<span class="line"><span>center：单元格内部居中。</span></span>
<span class="line"><span>stretch：拉伸，占满单元格的整个宽度（默认值）。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>place-self: &lt;align-self&gt; &lt;justify-self&gt;; 一个值是为两个相等</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="_3拓展" tabindex="-1">3拓展 <a class="header-anchor" href="#_3拓展" aria-label="Permalink to &quot;3拓展&quot;">​</a></h2><p><a href="https://codepen.io/luofatso/pen/wvyReNo" target="_blank" rel="noreferrer">在线演示</a></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span>&lt;html lang=&quot;en&quot;&gt;</span></span>
<span class="line"><span>  &lt;head&gt;</span></span>
<span class="line"><span>    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span></span>
<span class="line"><span>    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span></span>
<span class="line"><span>    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot; /&gt;</span></span>
<span class="line"><span>    &lt;title&gt;Document&lt;/title&gt;</span></span>
<span class="line"><span>    &lt;style&gt;</span></span>
<span class="line"><span>      .parent {</span></span>
<span class="line"><span>        height: 500px;</span></span>
<span class="line"><span>        display: grid;</span></span>
<span class="line"><span>        grid-template-columns: 3fr repeat(2, 1fr);</span></span>
<span class="line"><span>        grid-template-rows: repeat(5, 1fr);</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      .div1 {</span></span>
<span class="line"><span>        grid-area: 1 / 1 / 3 / 2;</span></span>
<span class="line"><span>        justify-se</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      .div2 {</span></span>
<span class="line"><span>        grid-area: 3 / 1 / 6 / 2;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      .div3 {</span></span>
<span class="line"><span>        grid-area: 1 / 2 / 2 / 4;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      .div4 {</span></span>
<span class="line"><span>        grid-area: 2 / 2 / 6 / 3;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      .div5 {</span></span>
<span class="line"><span>        grid-area: 2 / 3 / 6 / 4;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      div {</span></span>
<span class="line"><span>        border: 1px solid #000;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    &lt;/style&gt;</span></span>
<span class="line"><span>  &lt;/head&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  &lt;body&gt;</span></span>
<span class="line"><span>    &lt;div class=&quot;parent&quot;&gt;</span></span>
<span class="line"><span>      &lt;div class=&quot;div1&quot;&gt;</span></span>
<span class="line"><span>        &lt;p&gt;一些文字&lt;/p&gt;</span></span>
<span class="line"><span>      &lt;/div&gt;</span></span>
<span class="line"><span>      &lt;div class=&quot;div2&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span>      &lt;div class=&quot;div3&quot;&gt;3&lt;/div&gt;</span></span>
<span class="line"><span>      &lt;div class=&quot;div4&quot;&gt;4&lt;/div&gt;</span></span>
<span class="line"><span>      &lt;div class=&quot;div5&quot;&gt;5&lt;/div&gt;</span></span>
<span class="line"><span>    &lt;/div&gt;</span></span>
<span class="line"><span>  &lt;/body&gt;</span></span>
<span class="line"><span>&lt;/html&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><h2 id="参考学习" tabindex="-1">参考学习 <a class="header-anchor" href="#参考学习" aria-label="Permalink to &quot;参考学习&quot;">​</a></h2><p><a href="http://ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html" target="_blank" rel="noreferrer">参考阮一峰 CSS Grid布局</a></p>`,45),o=[c];function d(u,b,m,g,h,f){return n(),e("div",null,o)}const w=a(r,[["render",d]]);export{_ as __pageData,w as default};
