import{_ as a,o as s,c as n,a2 as e}from"./chunks/framework.DkMK-_fX.js";const h=JSON.parse('{"title":"doT.js -- JavaScript 模板引擎使用","description":"","frontmatter":{},"headers":[],"relativePath":"大前端/前端其它/doT.js -- JavaScript 模板引擎使用.md","filePath":"大前端/前端其它/doT.js -- JavaScript 模板引擎使用.md","lastUpdated":1727401527000}'),p={name:"大前端/前端其它/doT.js -- JavaScript 模板引擎使用.md"},i=e(`<h1 id="dot-js-javascript-模板引擎使用" tabindex="-1">doT.js -- JavaScript 模板引擎使用 <a class="header-anchor" href="#dot-js-javascript-模板引擎使用" aria-label="Permalink to &quot;doT.js -- JavaScript 模板引擎使用&quot;">​</a></h1><p>最近维护了一个老项目，项目中使用了doT.js模板引擎；模板很久之前使用过，但是很多语法也忘记了，还特意去看了一下，其实也很简单。在这里记录一下方便以后查阅。</p><h2 id="默认的定界符列表" tabindex="-1">默认的定界符列表 <a class="header-anchor" href="#默认的定界符列表" aria-label="Permalink to &quot;默认的定界符列表&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{{ }}	用于求值(evaluation)</span></span>
<span class="line"><span>{{= }}	用于插值(interpolation) // {{=it.name || &#39;默认信息&#39;}}</span></span>
<span class="line"><span>{{! }}	用于编码求值</span></span>
<span class="line"><span>{{# }}	用于编译时求值/引入和局部模板</span></span>
<span class="line"><span>{{## #}}	用于编译时定义</span></span>
<span class="line"><span>{{? }}	条件语句  // {{？it.id === 1}}id=1{{ ?? it.id ===2}}id=2 {{??}}id=其他{{?}}</span></span>
<span class="line"><span>{{~ }}	数组迭代 // {{~ it:val:i}}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="传对象" tabindex="-1">传对象 <a class="header-anchor" href="#传对象" aria-label="Permalink to &quot;传对象&quot;">​</a></h2><p>有时候业务需要也会传对象</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>发送：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  onclick=&quot;sendData(&#39;{{! JSON.stringify(it)}}&#39;)&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>接收:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  function sendData(it){</span></span>
<span class="line"><span>     console.log(&#39;===&#39;+JSON.stringify(it));</span></span>
<span class="line"><span>  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="直接循环数字" tabindex="-1">直接循环数字 <a class="header-anchor" href="#直接循环数字" aria-label="Permalink to &quot;直接循环数字&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;script type=&quot;text/template&quot; id=&quot;list_tpl&quot;&gt;</span></span>
<span class="line"><span>  {{for(var i=1;i&lt;25;i++){}}</span></span>
<span class="line"><span>    &lt;option value=&quot;{{=i}}&quot;&gt;{{=i}} 小时内&lt;/option&gt;</span></span>
<span class="line"><span>  {{}}}</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,9),l=[i];function t(r,c,o,d,b,u){return s(),n("div",null,l)}const _=a(p,[["render",t]]);export{h as __pageData,_ as default};
