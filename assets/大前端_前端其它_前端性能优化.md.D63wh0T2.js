import{_ as a,o as e,c as r,a2 as t}from"./chunks/framework.DkMK-_fX.js";const b=JSON.parse('{"title":"前端性能优化","description":"","frontmatter":{},"headers":[],"relativePath":"大前端/前端其它/前端性能优化.md","filePath":"大前端/前端其它/前端性能优化.md","lastUpdated":1728700067000}'),i={name:"大前端/前端其它/前端性能优化.md"},o=t('<h1 id="前端性能优化" tabindex="-1">前端性能优化 <a class="header-anchor" href="#前端性能优化" aria-label="Permalink to &quot;前端性能优化&quot;">​</a></h1><p>前端性能优化这个方面比较大，但是大概可以分以下几个方向：</p><ul><li>网络优化</li><li>页面渲染优化</li><li>图片优化</li><li>JS优化</li><li>打包优化</li><li>Vue优化</li><li>React优化</li></ul><h2 id="_1-网络优化" tabindex="-1">1.网络优化 <a class="header-anchor" href="#_1-网络优化" aria-label="Permalink to &quot;1.网络优化&quot;">​</a></h2><h3 id="_1-1-dns预解析" tabindex="-1">1.1 DNS预解析 <a class="header-anchor" href="#_1-1-dns预解析" aria-label="Permalink to &quot;1.1 DNS预解析&quot;">​</a></h3><p>link标签的rel属性设置dns-prefetch，提前获取域名对应的IP地址</p><h3 id="_1-2-使用缓存" tabindex="-1">1.2 使用缓存 <a class="header-anchor" href="#_1-2-使用缓存" aria-label="Permalink to &quot;1.2 使用缓存&quot;">​</a></h3><p>减轻服务端压力，快速得到数据（强缓存和协商缓存）</p><h3 id="_1-3-使用-cdn-内容分发网络" tabindex="-1">1.3 使用 CDN（内容分发网络） <a class="header-anchor" href="#_1-3-使用-cdn-内容分发网络" aria-label="Permalink to &quot;1.3 使用 CDN（内容分发网络）&quot;">​</a></h3><p>用户与服务器的物理距离对响应时间也有影响。</p><p>内容分发网络（CDN）是一组分散在不同地理位置的 web 服务器，用来给用户更高效地发送内容。典型地，选择用来发送内容的服务器是基于网络距离的衡量标准的。例如：选跳数（hop）最少的或者响应时间最快的服务器</p><h3 id="_1-4-压缩响应" tabindex="-1">1.4 压缩响应 <a class="header-anchor" href="#_1-4-压缩响应" aria-label="Permalink to &quot;1.4 压缩响应&quot;">​</a></h3><p>压缩组件通过减少 HTTP 请求产生的响应包的大小，从而降低传输时间的方式来提高性能。从 HTTP1.1 开始，Web 客户端可以通过 HTTP 请求中的 Accept-Encoding 头来标识对压缩的支持（这个请求头会列出一系列的压缩方法）</p><p>如果 Web 服务器看到请求中的这个头，就会使用客户端列出的方法中的一种来压缩响应。Web 服务器通过响应中的 Content-Encoding 头来告知 Web 客户端使用哪种方法进行的压缩</p><p>目前许多网站通常会压缩 HTML 文档，脚本和样式表的压缩也是值得的（包括 XML 和 JSON 在内的任何文本响应理论上都值得被压缩）。但是，图片和 PDF 文件不应该被压缩，因为它们本来已经被压缩了。</p><h3 id="_1-5-使用多个域名" tabindex="-1">1.5 使用多个域名 <a class="header-anchor" href="#_1-5-使用多个域名" aria-label="Permalink to &quot;1.5 使用多个域名&quot;">​</a></h3><p>Chrome 等现代化浏览器，都会有同域名限制并发下载数的情况，不同的浏览器及版本都不一样，使用不同的域名可以最大化下载线程，但注意保持在 2~4 个域名内，以避免 DNS 查询损耗。</p><h3 id="_1-6-避免图片src为空" tabindex="-1">1.6 避免图片src为空 <a class="header-anchor" href="#_1-6-避免图片src为空" aria-label="Permalink to &quot;1.6 避免图片src为空&quot;">​</a></h3><p>虽然 src 属性为空字符串，但浏览器仍然会向服务器发起一个 HTTP 请求：</p><p>IE 向页面所在的目录发送请求； Safari、Chrome、Firefox 向页面本身发送请求； Opera 不执行任何操作。</p>',20),l=[o];function n(h,c,_,d,s,p){return e(),r("div",null,l)}const f=a(i,[["render",n]]);export{b as __pageData,f as default};
